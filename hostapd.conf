# AP netdevice name (without 'ap' postfix, i.e., wlan0 uses wlan0ap for management frames with the Host AP driver)
# wlan0 with many nl80211 drivers
# Note: This attribute can be overridden by the values supplied with the '-i' command line parameter.
interface=wlp0s20f3

# SSID to be used in IEEE 802.11 management frames
ssid=IoTSecurity

# Operation mode (a = IEEE 802.11a (5 GHz), b = IEEE 802.11b (2.4 GHz), g = IEEE 802.11g (2.4 GHz), ad = IEEE 802.11ad (60 GHz); a/g options are used with IEEE 802.11n (HT), too, to specify band).
# For IEEE 802.11ac (VHT), this needs to be set to hw_mode=a.
# For IEEE 802.11ax (HE) on 6 GHz this needs to be set to hw_mode=a.
# When using ACS (see channel parameter), a special value "any" can be used to indicate that any support band can be used.
# This special case is currently supported only with drivers with which offloaded ACS is used.
# Default: IEEE 802.11b
hw_mode=g

# Channel number (IEEE 802.11)
# (default: 0, i.e., not set)
# Please note that some drivers do not use this value from hostapd and the channel will need to be configured separately with iwconfig.
# If CONFIG_ACS build option is enabled, the channel can be selected automatically at run time by setting channel=acs_survey or channel=0, both of which will enable the ACS survey based algorithm.
channel=6

# Station MAC address -based authentication
# Please note that this kind of access control requires a driver that uses hostapd to take care of management frame processing and as such, this can be used with driver=hostap or driver=nl80211, but not with driver=atheros.
# 0 = accept unless in deny list
# 1 = deny unless in accept list
# 2 = use external RADIUS server (accept/deny lists are searched first)
macaddr_acl=0

# Accept/deny lists are read from separate files (containing list of MAC addresses, one per line).
# Use absolute path name to make sure that the files can be read on SIGHUP configuration reloads.
# accept_mac_file=/etc/hostapd.accept
# deny_mac_file=/etc/hostapd.deny

# IEEE 802.11 specifies two authentication algorithms. hostapd can be configured to allow both of these or only one.
# Open system authentication should be used with IEEE 802.1X.
# Bit fields of allowed authentication algorithms:
# bit 0 = Open System Authentication
# bit 1 = Shared Key Authentication (requires WEP)
auth_algs=1

# Default WMM parameters (IEEE 802.11 draft; 11-03-0504-03-000e): for 802.11a or 802.11g networks
# These parameters are sent to WMM clients when they associate.
# The parameters will be used by WMM clients for frames transmitted to the access point.
# note - txop_limit is in units of 32microseconds
# note - acm is admission control mandatory flag. 0 = admission control not required, 1 = mandatory
# note - Here cwMin and cmMax are in exponent form.
# The actual cw value used will be (2^n)-1 where n is the value given here.
# The allowed range for these wmm_ac_??_{cwmin,cwmax} is 0..15 with cwmax >= cwmin.
wmm_enabled=0

# Enable WPA. Setting this variable configures the AP to require WPA (either WPA-PSK or WPA-RADIUS/EAP based on other configuration).
# For WPA-PSK, either wpa_psk or wpa_passphrase must be set and wpa_key_mgmt must include WPA-PSK.
# Instead of wpa_psk / wpa_passphrase, wpa_psk_radius might suffice.
# For WPA-RADIUS/EAP, ieee8021x must be set (but without dynamic WEP keys), RADIUS authentication server must be configured, and WPA-EAP must be included in wpa_key_mgmt.
# This field is a bit field that can be used to enable WPA (IEEE 802.11i/D3.0) and/or WPA2 (full IEEE 802.11i/RSN):
# bit0 = WPA
# bit1 = IEEE 802.11i/RSN (WPA2) (dot11RSNAEnabled)
# Note that WPA3 is also configured with bit1 since it uses RSN just like WPA2.
# In other words, for WPA3, wpa=2 is used the configuration (and wpa_key_mgmt=SAE for WPA3-Personal instead of wpa_key_mgmt=WPA-PSK).
wpa=2

# WPA pre-shared keys for WPA-PSK.
# This can be either entered as a 256-bit secret in hex format (64 hex digits), wpa_psk, or as an ASCII passphrase (8..63 characters) that will be converted to PSK.
# This conversion uses SSID so the PSK changes when ASCII passphrase is used and the SSID is changed.
# wpa_psk (dot11RSNAConfigPSKValue)
# wpa_passphrase (dot11RSNAConfigPSKPassPhrase)
wpa_passphrase=nems@704

# Set of accepted key management algorithms (WPA-PSK, WPA-EAP, or both).
# The entries are separated with a space.
# WPA-PSK-SHA256 and WPA-EAP-SHA256 can be added to enable SHA256-based stronger algorithms.
# WPA-PSK = WPA-Personal / WPA2-Personal
# WPA-PSK-SHA256 = WPA2-Personal using SHA256
# WPA-EAP = WPA-Enterprise / WPA2-Enterprise
# WPA-EAP-SHA256 = WPA2-Enterprise using SHA256
# SAE = SAE (WPA3-Personal)
# WPA-EAP-SUITE-B-192 = WPA3-Enterprise with 192-bit security/CNSA suite
# FT-PSK = FT with passphrase/PSK
# FT-EAP = FT with EAP
# FT-EAP-SHA384 = FT with EAP using SHA384
# FT-SAE = FT with SAE
# FILS-SHA256 = Fast Initial Link Setup with SHA256
# FILS-SHA384 = Fast Initial Link Setup with SHA384
# FT-FILS-SHA256 = FT and Fast Initial Link Setup with SHA256
# FT-FILS-SHA384 = FT and Fast Initial Link Setup with SHA384
# OWE = Opportunistic Wireless Encryption (a.k.a. Enhanced Open)
# DPP = Device Provisioning Protocol
# OSEN = Hotspot 2.0 online signup with encryption
wpa_key_mgmt=WPA-PSK

# Set of accepted cipher suites (encryption algorithms) for pairwise keys (unicast packets).
# This is a space separated list of algorithms:
# CCMP = AES in Counter mode with CBC-MAC (CCMP-128)
# TKIP = Temporal Key Integrity Protocol
# CCMP-256 = AES in Counter mode with CBC-MAC with 256-bit key
# GCMP = Galois/counter mode protocol (GCMP-128)
# GCMP-256 = Galois/counter mode protocol with 256-bit key
# Group cipher suite (encryption algorithm for broadcast and multicast frames) is automatically selected based on this configuration.
# If only CCMP is allowed as the pairwise cipher, group cipher will also be CCMP.
# Otherwise, TKIP will be used as the group cipher.
# The optional group_cipher parameter can be used to override this automatic selection.
# Pairwise cipher for WPA (v1) (default: TKIP)
wpa_pairwise=TKIP

# Pairwise cipher for RSN/WPA2 (default: use wpa_pairwise value)
rsn_pairwise=CCMP

# Interface for separate control program.
# If this is specified, hostapd will create this directory and a UNIX domain socket for listening to requests from external programs (CLI/GUI, etc.) for status information and configuration.
# The socket file will be named based on the interface name, so multiple hostapd processes/interfaces can be run at the same time if more than one interface is used.
# /var/run/hostapd is the recommended directory for sockets and by default, hostapd_cli will use it when trying to connect with hostapd.
ctrl_interface=/var/run/hostapd
